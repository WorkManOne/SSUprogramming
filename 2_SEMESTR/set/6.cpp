#include <iostream>
#include <set>
#include <string>
using namespace std;

int main() {
	setlocale(LC_ALL, "rus");
	multiset<string>how; //мультсет в который включаются слова повествовательных предл
	set<string>howu; //сет в который включаются уникальные слова повествовательных предл
	set<string>call; //сет в который включаются слова воскл и вопр предл
	//string text = "У попа была собака он ее любил. Собака съела мясо и он ее убил. Но не заканчивается ли у попа и у них на этом эта увлекательная история? Он и многие слагают легенды по поводу ее этой легендарной псины! Большинство в них верит но никто до сих пор даже не понял что та собака является прородичем той которая гоняется за кегой.";
	string text = "У попа была и собака. Собака была? Нет собаки не было! А может и была.";
	cout << text << endl<< endl;
	string w; //слово которое записывается в сет
	int f = 0; //флаг есть и какое предложение
	string sub; //подстрока(предложение) текста
	for (int i = 0; i < text.length(); i++) {
		if ((text[i] != '.') && (text[i] != '!') && (text[i] != '?')) {
			sub = sub + (char) tolower(text[i]); //пока не встречаем знак препинания записываем предложение
		}
		if (text[i] == '.') {
			sub += ' '; //если точка, то добавляем пробел, чтобы слово засчиталось и флаг 1
			f = 1;
		}
		if ((text[i] == '!') || (text[i] == '?')) {
			sub += ' '; //если вопрос и воскл, то добавляем пробел, чтобы слово засчиталось и флаг -1
			f = -1;
		}
		if (f == 1) { //если флаг 1 то начинаем анализ предложения
			for (int j = 0; j < sub.length(); j++) {
				if (sub[j] != ' ') {
					w = w + sub[j];
				}
				else {
					how.insert(w); //записываем слово в сет нужных слов
					w = "";
				}
			}
			sub = "";
			f = 0;
		}
		if (f == -1) { //если флаг -1 то начинаем анализ предложения
			for (int j = 0; j < sub.length(); j++) {
				if (sub[j] != ' ') {
					w = w + sub[j];
				}
				else {
					call.insert(w); //записываем слово в сет ненужных слов
					w = "";
				}
			}
			sub = "";
			f = 0;
		}
	}
	for (multiset <string> ::iterator it = how.begin(); it != how.end(); it++) {
		howu.insert(*it); //переносим уникальные слова из мультисета
	}
	for (set <string> ::iterator it = call.begin(); it != call.end(); it++) {
		how.erase(*it); //стираем ненужные слова из мультисета нужных
	}
	for (set <string> ::iterator it = call.begin(); it != call.end(); it++) {
		howu.erase(*it); //стираем ненужные слова из сета нужных
	}
	cout << "Слова в пов. предл:" <<endl;
	for (set <string> ::iterator it = howu.begin(); it != howu.end(); it++) {
		cout << *it << endl; //выводим уникальные слова
	}
	cout << endl;
	cout << "Не уникальных слов в пов. предл: " << how.size() << endl << "Уникальных слов в пов. предл: " << howu.size(); //пишем размеры
	cout << endl;
	return 0;
}

