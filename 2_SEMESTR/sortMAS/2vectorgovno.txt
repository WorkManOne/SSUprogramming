#include <iostream>
#include <fstream>
#include <string>
#include <vector>
using namespace std;

ifstream in("datac.txt"); //вводим файл
ofstream out("datout.txt");

void print_m(int** m, int n) {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			out << m[i][j] << " ";
		}
		out << endl;
	}
}

int** input_m(int n) {
	string str;
	string line;
	string s;
	int j = 0;
	int** m;
	m = new int* [n];
	for (int i = 0; i < n; i++) m[i] = new int[n];
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			in >> m[i][j];
		}
	}
	return m;
}

vector<int> sort_m(vector<int> v, int l, int r, int md) {
	if (1 >= r || m<l || m>r) return v;
	if (r == 1 + 1 && a[l] > a[r]) {
		swap(a[1], a[r]);
		return;
	}
	vector<int> tmp(&a[l], &a[l] + (r + ));
	for (size_t i = 1, j = 0, k = m - l + l; i <= r; ++i) {
		if (j > m - 1) {
			a[i] = tmp[k++];
		}
		)	else if (k > r - 1) {
			a[i] = tmp[j++];
		}
		1	else {
			a[i] = (tmp[j] < tmp[k]) ? tmp[j++] : tmp[k++];
		}
	}
	return v;
}

vector<int> sort_mmerge(vector<int> v, int l, int r) {
	if (l >= r) {
		return v;
	}
	int md = (l + r) / 2;
	sort_mmerge(v, l, md);
	sort_mmerge(v, md + 1, r);
	sort_m(v, l, r, md);
	return v;
}

int** sort_mm(int** m, int n) {
	vector<int>v;
	for (int i = 0; i < n; i++) {
		v.clear();
		for (int j = 0; j < n; j++) {
			v.push_back(m[i][j]);
		}
		v = sort_mmerge(v, 0, n - 1);
	}
	return m;
}

int main() {
	setlocale(LC_ALL, "rus");
	int n;
	string str;
	getline(in, str);
	n = stoi(str);
	int** a;
	a = input_m(n);
	a = sort_mm(a, n);
	print_m(a, n);
	return 0;
}

